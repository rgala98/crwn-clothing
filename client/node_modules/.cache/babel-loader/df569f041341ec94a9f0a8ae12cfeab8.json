{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n\n  try {\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,UAAT,EAAsBC,IAAtB,EAA4BC,GAA5B,QAAsC,oBAAtC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,SACIC,sBADJ,EAEIC,sBAFJ,QAGO,gBAHP;AAMA,OAAO,UAAUC,qBAAV,GAAiC;AAEpC,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;;AAEA,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACI,+BAAD,EAAkCM,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACI,sBAAsB,CAACO,cAAD,CAAvB,CAAT;AAEH,GALD,CAMA,OAAMC,KAAN,EAAY;AACJ,UAAMZ,GAAG,CAACK,sBAAsB,CAACO,KAAK,CAACC,OAAP,CAAvB,CAAT;AACP;AAIJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,UAAU,CAACG,eAAe,CAACc,uBAAjB,EAAyCT,qBAAzC,CAAhB;AACH","sourcesContent":["import { takeLatest , call, put} from 'redux-saga/effects';\n\nimport ShopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {\n    fetchCollectionSuccess,\n    fetchCollectionFailure\n} from './shop.actions';\n\n\nexport function* fetchCollectionsAsync(){\n\n    const collectionRef = firestore.collection('collections');\n\n    try{\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionSuccess(collectionsMap));\n\n    }\n    catch(error){\n            yield put(fetchCollectionFailure(error.message));\n    }\n\n\n\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);\n}"]},"metadata":{},"sourceType":"module"}