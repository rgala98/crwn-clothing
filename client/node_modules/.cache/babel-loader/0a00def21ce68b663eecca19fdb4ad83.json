{"ast":null,"code":"var _jsxFileName = \"/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport {connect} from 'react-redux';\n\nimport './sign-up.styles.scss';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n\nimport {signUpStart} from '../../redux/user/user.actions'\n\nconst SignUp = ({signUpStart} ) =>{\n\n    const [userCredentials, setCredentials] = useState({displayName:'',\n    email:'',\n    password:'',\n    confirmPassword:''});\n\n    const {displayName, email, password, confirmPassword} = userCredentials;\n\n    \n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if(password !== confirmPassword){\n            alert(\"Passwords don't match\");\n            return;\n        }\n\n        signUpStart({displayName,email,password});\n\n\n    };\n\n    const handleChange = event => {\n        const {name,value} = event.target;\n\n        setCredentials({...userCredentials, [name]: value})\n    } \n\n    \n    return(\n            <div className='sign-up'>\n                <h2 className='title'>I do not have a account</h2>\n                <span>Sign up with your email and password</span>\n\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange = {handleChange}\n                    label = 'Display Name'\n                    required />\n\n                    <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange = {handleChange}\n                    label = 'Email'\n                    required />\n\n\n                    <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange = {handleChange}\n                    label = 'Password'\n                    required />\n\n\n                    <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange = {handleChange}\n                    label = 'Confirm Password'\n                    required />\n\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n\n                </form>\n\n\n            </div>\n        \n    );\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\n\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n  "]},"metadata":{},"sourceType":"module"}