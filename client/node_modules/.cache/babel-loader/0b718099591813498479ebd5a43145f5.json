{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure, emailSignInStart } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(emailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","emailSignInStart","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,QAAuC,oBAAvC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,cAAR,EAAwBC,IAAxB,EAA6BC,yBAA7B,QAA8D,+BAA9D;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,EAA2FC,gBAA3F,QAAkH,gBAAlH;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBV,cAArB,CAArB;AAEA,UAAMW,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AAEA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACO,mBAAmB,CAAC;AAC1BW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADS;AACL,SAAGF,YAAY,CAACG,IAAb;AADE,KAAD,CAApB,CAAT;AAIH,GAVD,CAUC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACQ,mBAAmB,CAACY,KAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAElC,QAAMtB,UAAU,CAACI,eAAe,CAACmB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AAEH;AAED,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAV,CAA1B,EAAsD;AACzD,MAAG;AACC,UAAM;AAACb,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAMX,OAAO,GAAG,MAAMb,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CAACS,kBAAkB,CAAC;AACzBS,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADQ;AACJ,SAAGF,YAAY,CAACG,IAAb;AADC,KAAD,CAAnB,CAAT;AAKH,GATD,CASC,OAAMC,KAAN,EAAY;AACT,UAAMpB,GAAG,CAACU,kBAAkB,CAACU,KAAD,CAAnB,CAAT;AACH;AACJ;AAGD,OAAO,UAAUQ,kBAAV,GAA8B;AACjC,QAAM7B,UAAU,CAAEI,eAAe,CAAC0B,mBAAlB,EAAuCN,eAAvC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CACNC,IAAI,CAACmB,mBAAD,CADE,EAENnB,IAAI,CAACS,gBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import {takeLatest, put,all,call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {googleProvider, auth,createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport  {googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure, emailSignInStart} from './user.actions';\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n\n        const userRef = yield call(createUserProfileDocument, user);\n\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({\n            id: userSnapshot.id, ...userSnapshot.data()\n        }));\n\n    }catch(error){\n        yield put(googleSignInFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart(){\n\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n\n}\n\nexport function* signInWithEmail({payload: {email,password}}){\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(emailSignInSuccess({\n            id: userSnapshot.id, ...userSnapshot.data()\n        }));\n\n\n    }catch(error){\n        yield put(emailSignInFailure(error));\n    }\n}\n\n\nexport function* onEmailSignInStart(){\n    yield takeLatest (UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas(){\n    yield all([\n        call(onGoogleSignInStart),\n        call(emailSignInStart)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}