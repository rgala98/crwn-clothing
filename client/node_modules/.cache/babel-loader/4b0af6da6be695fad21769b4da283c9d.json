{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth().createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, put,all,call} from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {googleProvider, auth,createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nimport  { signInFailure, signInSuccess, signOutFailure,signOutSuccess, signUpFailure, signUpSuccess} from './user.actions';\n\n\nexport function* getSnapshotFromUserAuth(userAuth){\n\n    try{\n        const userRef = yield call(createUserProfileDocument, userAuth);\n\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({\n            id: userSnapshot.id, ...userSnapshot.data()\n        }));\n    }\n    catch(error){\n        yield put(signInFailure(error));\n    }\n\n}\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);\n\n        yield getSnapshotFromUserAuth(user);\n\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email,password}}){\n\n    try{\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapshotFromUserAuth(user);\n\n\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* isUserAuthenticated(){\n    try{\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n\n    }catch(error){\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n\n    }catch(error){\n        yield put(signOutFailure(error))\n    }\n}\n\nexport function* signUp({payload: {email, password,displayName}}){\n    try{\n        const {user} = yield auth().createUserWithEmailAndPassword(email, password);\n\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\n\n    }catch(error){\n        yield put(signUpFailure(error));\n    }\n\n}\n\nexport function* onGoogleSignInStart(){\n\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest (UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* onCheckUserSession(){\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut);\n}\n\nexport function* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\n\nexport function* userSagas(){\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(isUserAuthenticated),\n        call(onSignOutStart)\n    ]);\n}"]},"metadata":{},"sourceType":"module"}