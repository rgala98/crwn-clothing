{"ast":null,"code":"var _jsxFileName = \"/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectIsCollectionFetching, selectIsCollectionLoading } from '../../redux/shop/shop.selectors';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { WithSpinner } from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionStartAsync\n    } = this.props;\n    fetchCollectionStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","selectIsCollectionFetching","selectIsCollectionLoading","CollectionsOverview","CollectionPage","fetchCollectionStartAsync","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,EAAoCC,yBAApC,QAAoE,iCAApE;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,SAAQC,yBAAR,QAAwC,+BAAxC;AAEA,SAAQC,WAAR,QAA0B,sDAA1B;AAIA,MAAMC,6BAA6B,GAAGD,WAAW,CAACH,mBAAD,CAAjD;AAEA,MAAMK,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;;AAIA,MAAMK,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAsC;AAGlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACN,MAAAA;AAAD,QAA8B,KAAKO,KAAzC;AACAP,IAAAA,yBAAyB;AAE5B;;AAEDQ,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA,oBAAR;AAA8BC,MAAAA;AAA9B,QAAoD,KAAKJ,KAA/D;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAIL,KAAK,iBAC/C,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAmEH,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AACA,MAAA,MAAM,EAAIL,KAAK,iBACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAAEI;AAAxC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAcH;;AAzBiC;;AA+BtC,MAAMM,eAAe,GAAGlB,wBAAwB,CAAC;AAC7Ce,EAAAA,oBAAoB,EAAEd,0BADuB;AAE7Ce,EAAAA,kBAAkB,EAAEd;AAFyB,CAAD,CAAhD;;AAMA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,yBAAyB,EAAE,MAAMe,QAAQ,CAACf,yBAAyB,EAA1B;AADL,CAAL,CAAnC;;AAUA,eAAeN,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {createStructuredSelector} from 'reselect';\nimport {selectIsCollectionFetching, selectIsCollectionLoading} from '../../redux/shop/shop.selectors';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\n\nimport {fetchCollectionStartAsync} from '../../redux/shop/shop.actions';\n\nimport {WithSpinner} from '../../components/with-spinner/with-spinner.component';\n\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\n\nclass ShopPage extends React.Component{\n    \n\n    componentDidMount(){\n        const {fetchCollectionStartAsync} = this.props;\n        fetchCollectionStartAsync();\n         \n    }\n\n    render(){\n        const {match, isCollectionFetching, isCollectionLoaded} = this.props;\n        return(\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render = {props => (\n                    <CollectionOverviewWithSpinner isLoading={isCollectionFetching}{...props}/>\n                    )}\n                    />\n\n                <Route path={`${match.path}/:collectionId`} \n                render = {props => (\n                    <CollectionPageWithSpinner isLoading={! isCollectionLoaded} {...props}/>\n                    )}\n                    />\n            </div>\n        );\n    }\n}\n\n\n\n\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollectionLoaded: selectIsCollectionLoading\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n})\n\n\n\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}