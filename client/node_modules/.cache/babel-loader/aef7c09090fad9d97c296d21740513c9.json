{"ast":null,"code":"import _defineProperty from \"/Users/rgala98/Desktop/reactTutorial/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const exisitingCartItem = cartItems.find(cartItem => cartItem.id == cartItemToAdd.id);\n\n  if (exisitingCartItem) {\n    return cartItems.map(cartItem => cartItem.id == cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","exisitingCartItem","find","cartItem","id","map","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA6B;AACtD,QAAMC,iBAAiB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,IAAeJ,aAAa,CAACI,EADnB,CAA1B;;AAGI,MAAGH,iBAAH,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,IAAeJ,aAAa,CAACI,EAA7B,qBACID,QADJ;AACcG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAD5C,SAEEH,QAHC,CAAP;AAIH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAmBC,aAAnB;AAAkCM,IAAAA,QAAQ,EAAC;AAA3C,KAAP;AACP,CAZM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) =>{\n    const exisitingCartItem = cartItems.find(\n        cartItem => cartItem.id == cartItemToAdd.id );\n\n        if(exisitingCartItem){\n            return cartItems.map(cartItem => \n                cartItem.id == cartItemToAdd.id ? \n                {...cartItem, quantity: cartItem.quantity + 1}\n                : cartItem)\n        }\n\n        return [...cartItems, {...cartItemToAdd, quantity:1}]\n}"]},"metadata":{},"sourceType":"module"}