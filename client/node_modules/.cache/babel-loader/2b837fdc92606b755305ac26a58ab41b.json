{"ast":null,"code":"var _jsxFileName = \"/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss'; // import SignInSignUpPage from '../../pages/sign-in-sign-up-page/sign-in-sign-up.component';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart({\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Sign in with your email and password.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    handleChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"SIGN IN WITH GOOGLE\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: ({\n    email,\n    password\n  }) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/rgala98/Desktop/reactTutorial/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\n\nimport {connect} from 'react-redux';\n\nimport './sign-in.styles.scss';\n// import SignInSignUpPage from '../../pages/sign-in-sign-up-page/sign-in-sign-up.component';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions';\n\nconst SignIn =({emailSignInStart, googleSignInStart}) => {\n    \n    \n\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\n\n    const {email, password} = userCredentials;\n\n    const handleSubmit = async event =>{\n        event.preventDefault();\n\n        \n\n        emailSignInStart({email,password});\n    \n    };\n\n    const handleChange = event => {\n        const {value, name} = event.target;\n\n        setCredentials({ ...userCredentials,[name]: value})\n\n    }\n    \n    \n\n    return(\n        <div className='sign-in'>\n\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password.</span>\n\n        <form onSubmit={handleSubmit}>\n            <FormInput \n            name='email'\n            type='email'\n            handleChange={handleChange} \n            value={email} \n            label='Email'\n            required/>\n\n            <FormInput \n            name='password' \n            type='password' \n            value={this.state.password} \n            handleChange={this.handleChange}\n            label='Password'\n            required/>\n\n            <div className='buttons'>\n\n            <CustomButton type='submit'>Sign In</CustomButton>\n            <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n                SIGN IN WITH GOOGLE\n                </CustomButton>\n                \n            </div>\n\n            \n\n        </form>\n        </div>\n    )\n}\n\n    \n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: ({email,password}) => dispatch(emailSignInStart({email,password}))\n\n})\n\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}